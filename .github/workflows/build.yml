name: Build and Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Prepare directories
        shell: cmd
        run: |
          mkdir ffmpeg
          mkdir buildDist\downloads
          echo. > buildDist\downloads\.gitkeep
          build.bat
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: |
            buildDist/M3U8_Downloader.exe
            buildDist/config.ini
            buildDist/ffmpeg/
            buildDist/downloads/
            
  release:
    needs: build-windows
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-package
          path: artifacts
          
      - name: Create structured ZIP
        run: |
          # 创建目标目录结构
          mkdir -p package/ffmpeg package/downloads
          
          # 复制主文件和配置
          cp artifacts/M3U8_Downloader.exe package/
          cp artifacts/config.ini package/
          
          # 复制ffmpeg（确保文件存在）
          if [ -f "artifacts/ffmpeg/ffmpeg.exe" ]; then
            cp artifacts/ffmpeg/ffmpeg.exe package/ffmpeg/
          fi
          
          # 处理downloads目录（无条件创建，即使为空）
          touch package/downloads/.gitkeep
          
          # 打包
          cd package
          zip -r ../M3U8_Downloader-${{ github.ref_name }}.zip *
          cd ..
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: M3U8_Downloader-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
